@use "../global";
@use "../util/color";
@use "../util/mixins";
@use "menu";
@use "../settings/settings";
////
/// @group accordion-menu
////



@mixin zf-accordion-menu-left-right-arrows {
	@include settings.configure();
  .is-accordion-submenu-parent:not(.has-submenu-toggle) > a {
    position: relative;

    &::after {
      @include mixins.css-triangle(settings.$accordionmenu-arrow-size, settings.$accordionmenu-arrow-color, down);
      position: absolute;
      top: 50%;
      margin-top: -1 * (settings.$accordionmenu-arrow-size / 2);
      #{settings.$global-right}: 1rem;
    }
  }

  &.align-left .is-accordion-submenu-parent > a::after {
    right: 1rem;
    left: auto;
  }

  &.align-right .is-accordion-submenu-parent > a::after {
    right: auto;
    left: 1rem;
  }
}
@mixin foundation-accordion-menu {
@include settings.configure();
  .accordion-menu {
    @if settings.$accordionmenu-border {
      border-bottom: settings.$accordionmenu-border;
    }

    li {
      @if settings.$accordionmenu-border {
        border-top: settings.$accordionmenu-border;
        border-right: settings.$accordionmenu-border;
        border-left: settings.$accordionmenu-border;
      }
      width: 100%;
    }

    a {
      @if settings.$accordionmenu-item-background {
        background: settings.$accordionmenu-item-background;
      }
      padding: settings.$accordionmenu-padding;
    }

    .is-accordion-submenu a {
      padding: settings.$accordionmenu-submenu-padding;
    }

    .nested.is-accordion-submenu {
      @include menu.menu-nested(settings.$accordionmenu-nested-margin);
    }

    &.align-#{settings.$global-right} {
      .nested.is-accordion-submenu {
        @include menu.menu-nested(settings.$accordionmenu-nested-margin, right);
      }
    }

    @if settings.$accordionmenu-arrows {
      @include zf-accordion-menu-left-right-arrows;

      .is-accordion-submenu-parent[aria-expanded='true'] > a::after {
        transform: rotate(180deg);
        transform-origin: 50% 50%;
      }
    }
  }

  .is-accordion-submenu li {
    @if settings.$accordionmenu-border {
      border-right: 0;
      border-left: 0;
    }
  }

  .is-accordion-submenu-parent {
    position: relative;
  }

  .has-submenu-toggle > a {
    margin-#{settings.$global-right}: settings.$accordionmenu-submenu-toggle-width;
  }

  // Submenu toggle
  .submenu-toggle {
    position: absolute;
    top: 0;
    #{settings.$global-right}: 0;

    width: settings.$accordionmenu-submenu-toggle-width;
    height: settings.$accordionmenu-submenu-toggle-height;

    cursor: pointer;

    border-#{settings.$global-left}: settings.$accordion-submenu-toggle-border;

    @if settings.$accordionmenu-submenu-toggle-background {
      background: settings.$accordionmenu-submenu-toggle-background;
    }

    // Add the arrow to the toggle
    &::after {
      @include mixins.css-triangle(6px, settings.$accordionmenu-arrow-color, down);

      top: 0;
      bottom: 0;
      margin: auto;
    }
  }

  // Rotate the arrow when menu is open
  .submenu-toggle[aria-expanded='true']::after {
    transform: scaleY(-1);
    transform-origin: 50% 50%;
  }

  .submenu-toggle-text {
    @include mixins.element-invisible;
  }
}
